<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC "-//Hibernate/Hibernate Mapping DTD 3.0//EN"
"http://hibernate.sourceforge.net/hibernate-mapping-3.0.dtd">
<!-- 
    Mapping file autogenerated by MyEclipse Persistence Tools
-->
<hibernate-mapping>
    <class name="com.chen.entity.Message" table="message" catalog="myoa">
        <id name="messageId" type="java.lang.Integer">
            <column name="messageId" />
            <generator class="native" />
        </id>
        <many-to-one name="users" class="com.chen.entity.Users" fetch="select">
            <column name="fromUserId" not-null="true" />
        </many-to-one>
        <many-to-one name="messagetype" class="com.chen.entity.Messagetype" fetch="select">
            <column name="type" not-null="true" />
        </many-to-one>
        <property name="title" type="java.lang.String">
            <column name="title" length="100" not-null="true" />
        </property>
        <property name="content" type="java.lang.String">
            <column name="content" not-null="true" />
        </property>
        <property name="beginTime" type="java.sql.Timestamp">
            <column name="beginTime" length="19" not-null="true" />
        </property>
        <property name="endTime" type="java.sql.Timestamp">
            <column name="endTime" length="19" not-null="true" />
        </property>
        <property name="ifPublish" type="java.lang.Integer">
            <column name="ifPublish" />
        </property>
        <property name="recordTime" type="java.sql.Timestamp">
            <column name="recordTime"  />
        </property>
        <property name="publishObject" type="java.lang.String">
            <column name="publishObject" />
        </property>
        <property name="ifDelete" type="java.lang.Integer">
            <column name="ifDelete" />
        </property>
        <set name="readedmessages" inverse="true">
            <key>
                <column name="messageId" not-null="true" />
            </key>
            <one-to-many class="com.chen.entity.Readedmessage" />
        </set>
    
        
           <!-- 多对多 -->
         <set name="userses" table="messagetouser" >
        	<key column="messageId"></key>
        	<many-to-many class="com.chen.entity.Users" column="userId"></many-to-many>
        </set>
    </class>
</hibernate-mapping>
